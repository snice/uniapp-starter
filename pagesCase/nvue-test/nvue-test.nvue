<template>
	<view>
		<list :bounce="false" ref="test">
			<cell style="height: 200rpx;background-color: antiquewhite;"></cell>
			<cell v-for="i in 30">
				<view style="height: 300rpx;align-items: center;">
					<text>{{ i }}</text>
				</view>
			</cell>
		</list>
		<view style="position: absolute;width: 200rpx;height: 200rpx;left: 200rpx;background-color: red;" ref="float"></view>
	</view>
</template>

<script>
function delay(ms) {
	return new Promise(resolve => setTimeout(resolve, ms));
}
const BindingX = uni.requireNativePlugin('bindingx');
export default {
	data() {
		return {};
	},
	async onReady() {
		await this.$nextTick();
		await delay(50);
		let testEl = this.getEl(this.$refs.test);
		let floatEl = this.getEl(this.$refs.float);
		let tokenObj = BindingX.bind(
			{
				anchor: testEl,
				eventType: 'scroll',
				props: [
					{
						element: floatEl,
						property: 'transform.translateY',
						expression: 'y * -1'
					}
				]
			},
			e => {}
		);
	},
	methods: {
		getEl(el) {
			if (typeof el === 'string' || typeof el === 'number') return el;
			if (WXEnvironment) {
				return el.ref || el.$el.ref;
			} else {
				return el instanceof HTMLElement ? el : el.$el;
			}
		}
	}
};
</script>

<style></style>
